% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eliminator.R
\name{mEliminator}
\alias{mEliminator}
\title{The Eliminator for mpda}
\usage{
mEliminator(y, X, reg1 = 0.5, reg2 = 1, prior = NULL, max.dim = NULL,
  frac = 0.25, vip.lim = 1, n.seg = 10, verbose = TRUE)
}
\arguments{
\item{y}{Vector of responses, a factor of exact 2 levels.}

\item{X}{Matrix of predictor values.}

\item{reg1}{The regularization parameter for \code{\link{pdaDim}}.}

\item{reg2}{The regularization parameter for selection, see below.}

\item{prior}{Vector of prior probabilities, one value for each factor level in \code{y}.}

\item{max.dim}{Integer, the maximum number of dimensions to consider.}

\item{frac}{Fraction of unimportant variables to eliminate in each iteration (default is 0.25).}

\item{vip.lim}{The threshold for the VIP criterion (default is 1.0).}

\item{n.seg}{Integer, the number of cross-validation segments (default is 10).}

\item{verbose}{Logical, turns on/off output during computations.}
}
\value{
A matrix with one row for each level-pair and one column for each variable (column) in \code{X}.

Each row is a logical vector indicating which variables (\code{TRUE}) that were selected for the corresponding
level-pair. Thus, if we denote this matrix \code{S}, then \code{X[,S[1,]]} is the sub-matrix of \code{X} selected
to be optimal for the use for level-pair \code{1}, etc.
}
\description{
Variable elimination in mpda.
}
\details{
This is a wrapper for doing variable selection with the \code{\link{eliminator}} on an
\code{\link{mpda}} object.

You use this function if you have a multi-level classification problem, and wants
a standardized (and regularized) variable selection. This function uses \code{\link{mpda}} for the
multi-level problem, which means all pairs of levels are modelled. A variable selection is performed
for each level-pair, using the \code{\link{eliminator}} algorithm.

The argument \code{reg2} is a regularization parameter along the same line as \code{reg1}, which is used
by \code{\link{pdaDim}}. It is a rejection level of the \code{\link{mcnemar.test}}. In the \code{\link{eliminator}}
algorithm, this test is performed after each elimination step, to see if the resulting accuracy is significantly
pooerer than the maximum accuracy seen up to that step. As long as the corresponding p-value is at least as
large as \code{reg2}, the elimination should continue. Thus, setting \code{reg2=1.0} (default) means there is
no regularization, and the selection producing the maximum accuracy is the result. By lowering \code{reg2} you
get a more stable selection, at the potential cost of elimination too much.
}
\examples{
data(poems)
y <- poems[,1]
X <- as.matrix(poems[,-1])
# Variable selection
S <- mEliminator(y,X,max.dim=10)

# Fitting model with selection information
mp.trn <- mpda(y,X,prior=c(1,1,1),selected=S,max.dim=10)
# Predicting...
predict(mp.trn)

}
\seealso{
\code{\link{eliminator}}, \code{\link{mpda}}.
}
\author{
Lars Snipen.
}
